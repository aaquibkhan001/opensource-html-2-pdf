property.filepath=logs
appenders=console, rolling
appender.console.type=Console
appender.console.name=STDOUT
appender.console.layout.type=PatternLayout
appender.console.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss,SSS} [%t] %c{-2} - %msg%n
appender.file.type=File
appender.file.name=LOGFILE
appender.file.fileName=${filepath}/opensource-converter.log
appender.file.layout.type=PatternLayout
appender.file.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss,SSS} [%t] %c{-2} - %msg%n
appender.rolling.type=RollingFile
appender.rolling.name=RollingFile
appender.rolling.fileName=${filepath}/opensource-converter.log
appender.rolling.filePattern=${filepath}/opensource-converter.%d{yyyy-MM-dd}.log.gz
appender.rolling.layout.type=PatternLayout
appender.rolling.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss,SSS} [%t]%c{-2} - %msg%n
appender.rolling.policies.type=Policies
# Rotate log file each day and keep 30 days worth
appender.rolling.policies.time.type=TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval=1
appender.rolling.policies.time.modulate=true
appender.rolling.strategy.type=DefaultRolloverStrategy
appender.rolling.strategy.delete.type=Delete
appender.rolling.strategy.delete.basePath=${filepath}
appender.rolling.strategy.delete.maxDepth=1
appender.rolling.strategy.delete.ifLastModified.type=IfLastModified
# Delete files older than 30 days
appender.rolling.strategy.delete.ifLastModified.age=30d
rootLogger.level=debug
rootLogger.appenderRef.rolling.ref=RollingFile
rootLogger.appenderRef.console.ref=STDOUT
rootLogger.additivity=false